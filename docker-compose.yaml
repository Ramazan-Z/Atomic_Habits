services:

  redis:
    image: redis:latest
    restart: on-failure
    expose:
      - "6379"

  db:
    image: postgres
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - postgres_data:/var/lib/posgresql/data
    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s

  app:
    build: .
    tty: true
    expose:
      - "8000"
    command: sh -c "python manage.py migrate && gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - static:/app/staticfiles
      - media:/app/media
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: celery -A config worker -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: celery -A config beat -l INFO
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - redis
      - db
      - app
    env_file:
      - .env

  nginx:
    build: ./nginx
    restart: on-failure
    volumes:
      - nginx_conf:/etc/nginx
      - static:/var/www/html/static
      - media:/var/www/html/media
    ports:
      - 80:80
    depends_on:
      - app

volumes:
  postgres_data:
  nginx_conf:
  static:
  media: